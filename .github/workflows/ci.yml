name: CI

on: [push]

jobs:
  build:
    name: JDK ${{ matrix.java_version }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      ANDROID_SDK_TOOLS: "4333796"
    strategy:
      matrix:
        # TODO Add 13 when Gradle 6.0 is out
        # TODO Add 9, 10, 11, and 12 after Kotlin 1.3.60
        java_version: [1.8]
    steps:
#      - name: Set up Android SDK
#        run: |
#          # Install the rest of tools (e.g., avdmanager)
#          export PATH="$ANDROID_HOME/tools/bin:$PATH"
#          sdkmanager tools
      - name: Install Android sdkmanager
        run: |
          wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
          sudo unzip -d $ANDROID_HOME android-sdk.zip > /dev/null
      - name: Install emulator
        run: |
          echo "y" | sudo $ANDROID_HOME/tools/bin/sdkmanager --licenses > /dev/null
          sudo $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-18;default;armeabi-v7a"
      - name: Start emulator
        run: |
          export PATH="$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH"
          sudo $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window > /dev/null 2>&1 &
#        run: |
#          # Create and start emulator for the script. Meant to race the install task.
#          echo no | avdmanager create avd --force -n test -k "system-images;android-18;default;armeabi-v7a"
#          $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window > /dev/null 2>&1 &
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java_version }}
      - name: Configure Gradle
        # Initial gradle configuration, install dependencies, etc
        run: ./gradlew help
      - name: Spot check
        # Run spotless first to fail fast on spotless issues
        run: ./gradlew spotlessCheck --stacktrace
      - name: Build project
        run: ./gradlew assemble --stacktrace
      # TODO split test and instrumentation into parallel builds
      - name: Run tests
        run: ./gradlew test --stacktrace
      - name: Run instrumentation tests
        run: |
          export PATH="$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH"
          ./.github/workflows/android-wait-for-emulator
          adb devices
          adb shell input keyevent 82
          ./gradlew connectedCheck --stacktrace
      - name: Final checks
        run: ./gradlew check --stacktrace
      - name: Upload snapshot (master only)
        run: ./gradlew uploadArchives -PSONATYPE_NEXUS_USERNAME=${{ secrets.SonatypeUsername }} -PSONATYPE_NEXUS_PASSWORD=${{ secrets.SonatypePassword }}
        if: success() && github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && matrix.java_version == '1.8'
