name: CI

on:
  # Only run push on main
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  # Always run on PRs
  pull_request:
    branches: [ main ]
  merge_group:

concurrency:
  group: 'ci-${{ github.event.merge_group.head_ref || github.head_ref }}-${{ github.workflow }}'
  cancel-in-progress: true

jobs:
  build:
    runs-on: macOS-latest
    strategy:
      matrix:
        api-level: [ 18 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      # TODO split test and instrumentation into parallel builds
      - name: Build and run unit tests
        id: gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: check

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck

      - name: (Fail-only) Upload build reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: |
            **/build/reports/**

      - name: Upload snapshot (main only)
        if: success() && github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: ./gradlew publish -PmavenCentralUsername="${{ secrets.SonatypeUsername }}" -PmavenCentralPassword="${{ secrets.SonatypePassword }}"
