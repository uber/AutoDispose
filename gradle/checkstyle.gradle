/*
 * Copyright (C) 2017. Uber Technologies
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

subprojects {
  apply plugin: 'checkstyle'

  afterEvaluate {
    if (project.getPlugins().hasPlugin('com.android.application') || project.getPlugins().
        hasPlugin('com.android.library')) {

      task checkstyleMain(type: Checkstyle) {
        ignoreFailures = false
        showViolations = true
        source 'src/main', 'src/release'
        include '**/*.java'
        exclude '**/gen/**'
        exclude '**/R.java'
        exclude '**/BuildConfig.java'
        reports {
          xml.destination new File("$project.buildDir/reports/checkstyle/main.xml")
        }
        classpath = files()
        configFile = rootProject.file('checkstyle.xml')
      }

      task checkstyleTest(type: Checkstyle) {
        ignoreFailures = false
        showViolations = true
        source 'src/test', 'src/androidTest'
        include '**/*.java'
        exclude '**/gen/**'
        exclude '**/R.java'
        exclude '**/BuildConfig.java'
        reports {
          xml.destination new File("$project.buildDir/reports/checkstyle/test.xml")
        }
        classpath = files()
        configFile = rootProject.file('checkstyle.xml')
      }

      task checkstyle(dependsOn: ['checkstyleMain', 'checkstyleTest']) {
        description 'Runs Checkstyle inspection against Android sourcesets.'
        group = 'Code Quality'
      }

      project.tasks.getByName("check").dependsOn "checkstyle"
    } else {
      checkstyle {
        ignoreFailures = false
        showViolations = true
        configFile rootProject.file('checkstyle.xml')
      }
    }

    tasks.withType(Checkstyle) {
      configProperties = ['proj.module.dir'      : projectDir.absolutePath,
                          'checkstyle.cache.file': './build/cache/checkstyle-cache']
    }
  }
}
