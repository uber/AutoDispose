/*
 * Copyright (C) 2017. Uber Technologies
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import net.ltgt.gradle.errorprone.CheckSeverity
buildscript {
  apply from: rootProject.file('gradle/dependencies.gradle')
  buildscript {
    repositories {
      google()
      mavenCentral()
      maven { url "https://plugins.gradle.org/m2/" }
      jcenter()
    }
    dependencies {
      classpath deps.build.gradlePlugins.android
      classpath deps.build.gradlePlugins.kotlin
      classpath "net.ltgt.gradle:gradle-errorprone-plugin:${deps.versions.errorPronePlugin}"
      classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:${deps.versions.dokka}"
      classpath "org.jetbrains.dokka:dokka-gradle-plugin:${deps.versions.dokka}"
      classpath "ru.vyarus:gradle-animalsniffer-plugin:${deps.versions.animalSniffer}"
    }
  }
}

subprojects {
  repositories {
    google()
    mavenCentral()
    jcenter()
  }

  afterEvaluate {
    boolean isAndroidLibrary = plugins.hasPlugin('com.android.library')
    boolean usesErrorProne = plugins.hasPlugin('net.ltgt.errorprone')
    if (isAndroidLibrary && usesErrorProne) {
      def configurer = { variant ->
        variant.getJavaCompileProvider().configure {
          options.errorprone.nullaway {
            severity = CheckSeverity.ERROR
            annotatedPackages.add("com.uber")
          }
        }
      }
      project.android.libraryVariants.configureEach(configurer)
      project.android.testVariants.configureEach(configurer)
      project.android.unitTestVariants.configureEach(configurer)
    }
    if (isAndroidLibrary) {
      // TODO replace with https://issuetracker.google.com/issues/72050365 once released.
      project.android.libraryVariants.all {
        it.generateBuildConfigProvider.configure {
          it.enabled = false
        }
      }
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

apply from: 'gradle/dependencies.gradle'
apply from: 'gradle/checkstyle.gradle'
apply from: 'gradle/publish-docs.gradle'
